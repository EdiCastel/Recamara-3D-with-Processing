//Edi Damian Castelan Gallardo
//193z0286
//ISC
import processing.opengl.*;

float rotx=0.0, roty=0.0, distx=0.0, disty=0.0,z=0;
int lastx, lasty;
PImage suelo,pared,puerta,ventana1,ventana2,biblioteca,bordes,cama,base,poster,sofa,posadera,chimenea,madera;

void setup(){
 size(1200,600,P3D);
 noStroke();
 suelo = loadImage("suelo.jpg");
 pared = loadImage("pared.jpg");
 puerta = loadImage("puerta.png");
 ventana1 = loadImage("ventana1.jpg");
 ventana2 = loadImage("ventana2.jpg");
 biblioteca = loadImage("biblioteca.jpg");
 bordes = loadImage("bordes.jpg");
 cama = loadImage("cama.png");
 base = loadImage("base.jpg");
 poster = loadImage("poster.jpg");
 sofa = loadImage("sofa.jpg");
 posadera = loadImage("posadera.png");
 chimenea = loadImage("chimenea.png");
 madera = loadImage("madera.jpg");
 textureMode(NORMAL);
}

void draw(){
 background(0);
 translate(width/2,height/2,z);
 rotateX(rotx+disty);
 rotateY(roty+distx);
 recamara();
 cama();
 mesa();
 silla();
 biblioteca();
 sofa();
 zoom();
}

void recamara(){
 //pared del frente
 pushMatrix();
   beginShape(QUADS);
     texture(pared);
     vertex(-300,-100,300,0,0);
     vertex(300,-100,300,1,0);
     vertex(300,100,300,1,1);
     vertex(-300,100,300,0,1);
   endShape();
   //pared de atras
   beginShape(QUADS);
   texture(pared);
     vertex(-300,-100,-200,0,0);
     vertex(300,-100,-200,1,0);
     vertex(300,100,-200,1,1);
     vertex(-300,100,-200,0,1);
    endShape();    
    //Suelo
    beginShape(QUADS);
    texture(suelo);
     vertex(-300,100,-200,0,0);
     vertex(300,100,-200,1,0);
     vertex(300,100,300,1,1);
     vertex(-300,100,300,0,1);
    endShape();
    //pared derecha
    beginShape(QUADS);
     texture(pared);
      vertex(-300,-100,300,0,0);
      vertex(-300,-100,-200,1,0);
      vertex(-300,100,-200,1,1);
      vertex(-300,100,300,0,1);
    endShape();
    //pared izquierda
    beginShape(QUADS);
     texture(pared);
      vertex(300,-100,-200,0,0);
      vertex(300,-100,300,1,0);
      vertex(300,100,300,1,1);
      vertex(300,100,-200,0,1);
    endShape();
    //puerta parte dentro
    beginShape(QUADS);
     texture(puerta);
      vertex(299,-50,-40,0,0);
      vertex(299,-50,40,1,0);
      vertex(299,100,40,1,1);
      vertex(299,100,-40,0,1);
    endShape();
    //puerta parte fuera
    beginShape(QUADS);
     texture(puerta);
      vertex(301,-50,-40,0,0);
      vertex(301,-50,40,1,0);
      vertex(301,100,40,1,1);
      vertex(301,100,-40,0,1);
    endShape();
    //ventana parte dentro
    beginShape(QUADS);
     texture(ventana1);
      vertex(-299,-50,80,0,0);
      vertex(-299,-50,-40,1,0);
      vertex(-299,30,-40,1,1);
      vertex(-299,30,80,0,1);
    endShape(); 
    //ventana parte fuera
    beginShape(QUADS);
     texture(ventana2);
      vertex(-301,-50,80,0,0);
      vertex(-301,-50,-40,1,0);
      vertex(-301,30,-40,1,1);
      vertex(-301,30,80,0,1);
    endShape(); 
    //paredes division
    beginShape(QUADS);
     texture(pared);
      vertex(0,-100,300,0,0);
      vertex(0,-100,100,1,0);
      vertex(0,100,100,1,1);
      vertex(0,100,300,0,1);
    endShape();
    beginShape(QUADS);
     texture(pared);
      vertex(0,-100,0,0,0);
      vertex(0,-100,-200,1,0);
      vertex(0,100,-200,1,1);
      vertex(0,100,0,0,1);
    endShape();
    beginShape(QUADS);
     texture(pared);
      vertex(0,-100,0,0,0);
      vertex(0,-100,100,1,0);
      vertex(0,-50,100,1,1);
      vertex(0,-50,0,0,1);
    endShape();
    ///poster
    beginShape(QUADS);
     texture(poster);
       vertex(-200,-40,-199,0,0);
       vertex(-150,-40,-199,1,0);
       vertex(-150,30,-199,1,1);
       vertex(-200,30,-199,0,1);
     endShape();
     //chimenea
     beginShape(QUADS);
     texture(chimenea);
       vertex(100,10,299,0,0);
       vertex(200,10,299,1,0);
       vertex(200,100,299,1,1);
       vertex(100,100,299,0,1);
    endShape();
 popMatrix();
}

void mesa(){
 pushMatrix();
   beginShape(QUADS);
     texture(madera);
       vertex(-225,40,200,0,0);
       vertex(-75,40,200,1,0);
       vertex(-75,40,300,1,1);
       vertex(-225,40,300,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-225,43,200,0,0);
       vertex(-75,43,200,1,0);
       vertex(-75,43,300,1,1);
       vertex(-225,43,300,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-225,40,300,0,0);
       vertex(-225,43,300,1,0);
       vertex(-225,43,200,1,1);
       vertex(-225,40,200,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-75,40,300,0,0);
       vertex(-75,43,300,1,0);
       vertex(-75,43,200,1,1);
       vertex(-75,40,200,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-75,40,200,0,0);
       vertex(-225,40,200,1,0);
       vertex(-225,43,200,1,1);
       vertex(-75,43,200,0,1);
   endShape();
   //pata1
   beginShape(QUADS);
     texture(madera);
       vertex(-220,43,295,0,0);
       vertex(-215,43,295,1,0);
       vertex(-215,100,295,1,1);
       vertex(-220,100,295,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-220,43,290,0,0);
       vertex(-215,43,290,1,0);
       vertex(-215,100,290,1,1);
       vertex(-220,100,290,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-220,43,295,0,0);
       vertex(-220,43,290,1,0);
       vertex(-220,100,290,1,1);
       vertex(-220,100,295,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-215,43,295,0,0);
       vertex(-215,43,290,1,0);
       vertex(-215,100,290,1,1);
       vertex(-215,100,295,0,1);
   endShape();
    //pata2
   beginShape(QUADS);
     texture(madera);
       vertex(-80,43,295,0,0);
       vertex(-85,43,295,1,0);
       vertex(-85,100,295,1,1);
       vertex(-80,100,295,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-80,43,290,0,0);
       vertex(-85,43,290,1,0);
       vertex(-85,100,290,1,1);
       vertex(-80,100,290,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-80,43,295,0,0);
       vertex(-80,43,290,1,0);
       vertex(-80,100,290,1,1);
       vertex(-80,100,295,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-85,43,295,0,0);
       vertex(-85,43,290,1,0);
       vertex(-85,100,290,1,1);
       vertex(-85,100,295,0,1);
   endShape();
   //pata3
   beginShape(QUADS);
     texture(madera);
       vertex(-80,43,205,0,0);
       vertex(-85,43,205,1,0);
       vertex(-85,100,205,1,1);
       vertex(-80,100,205,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-80,43,210,0,0);
       vertex(-85,43,210,1,0);
       vertex(-85,100,210,1,1);
       vertex(-80,100,210,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-80,43,205,0,0);
       vertex(-80,43,210,1,0);
       vertex(-80,100,210,1,1);
       vertex(-80,100,205,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-85,43,205,0,0);
       vertex(-85,43,210,1,0);
       vertex(-85,100,210,1,1);
       vertex(-85,100,205,0,1);
   endShape();
   //pata4
   beginShape(QUADS);
     texture(madera);
       vertex(-220,43,205,0,0);
       vertex(-215,43,205,1,0);
       vertex(-215,100,205,1,1);
       vertex(-220,100,205,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-220,43,210,0,0);
       vertex(-215,43,210,1,0);
       vertex(-215,100,210,1,1);
       vertex(-220,100,210,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-220,43,205,0,0);
       vertex(-220,43,210,1,0);
       vertex(-220,100,210,1,1);
       vertex(-220,100,205,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-215,43,205,0,0);
       vertex(-215,43,210,1,0);
       vertex(-215,100,210,1,1);
       vertex(-215,100,205,0,1);
   endShape();
 popMatrix(); 
}

void silla(){
  pushMatrix();
   beginShape(QUADS);
     texture(madera);
       vertex(-175,60,150,0,0);
       vertex(-125,60,150,1,0);
       vertex(-125,60,200,1,1);
       vertex(-175,60,200,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-175,63,150,0,0);
       vertex(-125,63,150,1,0);
       vertex(-125,63,200,1,1);
       vertex(-175,63,200,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-175,60,200,0,0);
       vertex(-175,63,200,1,0);
       vertex(-175,63,153,1,1);
       vertex(-175,60,153,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-125,60,200,0,0);
       vertex(-125,63,200,1,0);
       vertex(-125,63,153,1,1);
       vertex(-125,60,153,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-125,60,200,0,0);
       vertex(-175,60,200,1,0);
       vertex(-175,63,200,1,1);
       vertex(-125,63,200,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-128,60,150,0,0);
       vertex(-172,60,150,1,0);
       vertex(-172,63,150,1,1);
       vertex(-128,63,150,0,1);
   endShape();
   //pata1
   beginShape(QUADS);
     texture(madera);
       vertex(-175,20,150,0,0);
       vertex(-172,20,150,1,0);
       vertex(-172,100,150,1,1);
       vertex(-175,100,150,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-175,20,153,0,0);
       vertex(-172,20,153,1,0);
       vertex(-172,100,153,1,1);
       vertex(-175,100,153,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-175,20,150,0,0);
       vertex(-175,20,153,1,0);
       vertex(-175,100,153,1,1);
       vertex(-175,100,150,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-172,20,150,0,0);
       vertex(-172,20,153,1,0);
       vertex(-172,100,153,1,1);
       vertex(-172,100,150,0,1);
   endShape();
   //pata2
   beginShape(QUADS);
     texture(madera);
       vertex(-125,20,150,0,0);
       vertex(-128,20,150,1,0);
       vertex(-128,100,150,1,1);
       vertex(-125,100,150,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-125,20,153,0,0);
       vertex(-128,20,153,1,0);
       vertex(-128,100,153,1,1);
       vertex(-125,100,153,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-125,20,150,0,0);
       vertex(-125,20,153,1,0);
       vertex(-125,100,153,1,1);
       vertex(-125,100,150,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-128,20,150,0,0);
       vertex(-128,20,153,1,0);
       vertex(-128,100,153,1,1);
       vertex(-128,100,150,0,1);
   endShape();
   //pata3
   beginShape(QUADS);
     texture(madera);
       vertex(-125,63,200,0,0);
       vertex(-128,63,200,1,0);
       vertex(-128,100,200,1,1);
       vertex(-125,100,200,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-125,63,197,0,0);
       vertex(-128,63,197,1,0);
       vertex(-128,100,197,1,1);
       vertex(-125,100,197,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-125,63,200,0,0);
       vertex(-125,63,197,1,0);
       vertex(-125,100,197,1,1);
       vertex(-125,100,200,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-128,63,200,0,0);
       vertex(-128,63,197,1,0);
       vertex(-128,100,197,1,1);
       vertex(-128,100,200,0,1);
   endShape();
   //pata4
      beginShape(QUADS);
     texture(madera);
       vertex(-175,63,200,0,0);
       vertex(-172,63,200,1,0);
       vertex(-172,100,200,1,1);
       vertex(-175,100,200,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-175,63,197,0,0);
       vertex(-172,63,197,1,0);
       vertex(-172,100,197,1,1);
       vertex(-175,100,197,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-175,63,200,0,0);
       vertex(-175,63,197,1,0);
       vertex(-175,100,197,1,1);
       vertex(-175,100,200,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-172,63,200,0,0);
       vertex(-172,63,197,1,0);
       vertex(-172,100,197,1,1);
       vertex(-172,100,200,0,1);
   endShape();
   //respaldo
   beginShape(QUADS);
     texture(madera);
       vertex(-128,20,150,0,0);
       vertex(-172,20,150,1,0);
       vertex(-172,43,150,1,1);
       vertex(-128,43,150,0,1);
   endShape();
   beginShape(QUADS);
     texture(madera);
       vertex(-128,20,153,0,0);
       vertex(-172,20,153,1,0);
       vertex(-172,43,153,1,1);
       vertex(-128,43,153,0,1);
   endShape();
   beginShape(QUADS);
     fill(0);
       vertex(-125,20,150,0,0);
       vertex(-175,20,150,1,0);
       vertex(-175,20,153,1,1);
       vertex(-125,20,153,0,1);
   endShape();
 popMatrix();
}

void sofa(){
 pushMatrix();
   beginShape(QUADS);
    texture(sofa);
     vertex(70,30,100,0,0);
     vertex(230,30,100,1,0);
     vertex(230,100,100,1,1);
     vertex(70,100,100,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(70,30,110,0,0);
       vertex(230,30,110,1,0);
       vertex(230,100,110,1,1);
       vertex(70,100,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(70,30,110,0,0);
       vertex(70,30,100,1,0);
       vertex(230,30,100,1,1);
       vertex(230,30,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(70,30,110,0,0);
       vertex(70,30,100,1,0);
       vertex(70,100,100,1,1);
       vertex(70,100,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(230,30,110,0,0);
       vertex(230,30,100,1,0);
       vertex(230,100,100,1,1);
       vertex(230,100,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(70,50,110,0,0);
       vertex(70,50,170,1,0);
       vertex(70,100,170,1,1);
       vertex(70,100,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(80,50,110,0,0);
       vertex(80,50,170,1,0);
       vertex(80,100,170,1,1);
       vertex(80,100,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(70,50,170,0,0);
       vertex(80,50,170,1,0);
       vertex(80,50,110,1,1);
       vertex(70,50,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(70,50,170,0,0);
       vertex(80,50,170,1,0);
       vertex(80,100,170,1,1);
       vertex(70,100,170,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(220,50,110,0,0);
       vertex(220,50,170,1,0);
       vertex(220,100,170,1,1);
       vertex(220,100,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(230,50,110,0,0);
       vertex(230,50,170,1,0);
       vertex(230,100,170,1,1);
       vertex(230,100,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(220,50,170,0,0);
       vertex(230,50,170,1,0);
       vertex(230,50,110,1,1);
       vertex(220,50,110,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(220,50,170,0,0);
       vertex(230,50,170,1,0);
       vertex(230,100,170,1,1);
       vertex(220,100,170,0,1);
    endShape();
    beginShape(QUADS);
     texture(posadera);
       vertex(80,60,105,0,0);
       vertex(220,60,105,1,0);
       vertex(220,60,170,1,1);
       vertex(80,60,170,0,1);
    endShape();
    beginShape(QUADS);
     texture(sofa);
       vertex(80,60,170,0,0);
       vertex(220,60,170,1,0);
       vertex(220,100,170,1,1);
       vertex(80,100,170,0,1);
    endShape();
 popMatrix();
}

void biblioteca(){
  pushMatrix();
   beginShape(QUADS);
   texture(biblioteca);
     vertex(100,-30,-160,0,0);
     vertex(300,-30,-160,1,0);
     vertex(300,100,-160,1,1);
     vertex(100,100,-160,0,1);
    endShape();
    beginShape();
    texture(bordes);
      vertex(100,-30,-160,0,0);
      vertex(100,-30,-200,1,0);
      vertex(100,100,-200,1,1);
      vertex(100,100,-160,0,1);
    endShape();
    beginShape();
     texture(bordes);
       vertex(100,-30,-160,0,0);
       vertex(100,-30,-200,1,0);
       vertex(300,-30,-200,1,1);
       vertex(300,-30,-160,0,1);
     endShape();
   popMatrix();
}

void cama(){
  pushMatrix();
     beginShape();
     texture(cama);
       vertex(-250,60,-200,0,0);
       vertex(-100,60,-200,1,0);
       vertex(-100,60,0,1,1);
       vertex(-250,60,0,0,1);
     endShape();
     beginShape();
     fill(230);
       vertex(-100,80,0,0,0);
       vertex(-100,80,-200,1,0);
       vertex(-100,60,-200,1,1);
       vertex(-100,60,0,0,1);
     endShape();
     beginShape();
     fill(230);
       vertex(-250,80,0,0,0);
       vertex(-250,80,-200,1,0);
       vertex(-250,60,-200,1,1);
       vertex(-250,60,0,0,1);
     endShape();
     beginShape();
     fill(230);
       vertex(-250,80,0,0,0);
       vertex(-100,80,0,1,0);
       vertex(-100,60,0,1,1);
       vertex(-250,60,0,0,1);
     endShape();
     beginShape();
     texture(base);
       vertex(-100,100,0,0,0);
       vertex(-100,100,-200,1,0);
       vertex(-100,80,-200,1,1);
       vertex(-100,80,0,0,1);
     endShape();
     beginShape();
     texture(base);
       vertex(-250,100,0,0,0);
       vertex(-250,100,-200,1,0);
       vertex(-250,80,-200,1,1);
       vertex(-250,80,0,0,1);
     endShape();
     beginShape();
     texture(base);
       vertex(-250,100,0,0,0);
       vertex(-100,100,0,1,0);
       vertex(-100,80,0,1,1);
       vertex(-250,80,0,0,1);
     endShape();
   popMatrix();
}

void zoom(){
 if (mousePressed && (mouseButton == LEFT)) {
    z=z+2;
  } else if (mousePressed && (mouseButton == RIGHT)) {
    z=z-2;
  }
}
void mousePressed(){
 lastx=mouseX;
 lasty=mouseY;
}

void mouseDragged(){
 distx=radians(mouseX-lastx);
 disty=radians(lasty-mouseY);
}

void mouseReleased(){
 rotx+=disty;
 roty+=distx;
 distx = disty = 0.0;
}
